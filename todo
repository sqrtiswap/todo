#!/bin/sh

main() {
	case $1 in
		a*) add "$@" ;;
		d*) didit ;;		# provisional
		e*) edit ;;		# provisional
		f*) finished ;;
		l*) ls "$@" ;;		# not colored
		p*) prio ;;		# not implemented
		r*) report ;;		# not implemented
		t*) tree "$@" ;;	# not implemented
		*) usage
	esac
}

add() {
	shift 1 && echo "(A) $(date +%Y-%m-%d) $@" >> $TODODIR/todo.txt
}

finished() {
	$PAGER "$TODODIR/done.txt"
}

didit() {
	$EDITOR $TODODIR/todo.txt $TODODIR/done.txt
}

edit() {
	$EDITOR "$TODODIR/todo.txt"
}

ls() {
	case $2 in
		c*) lscon ;;		# not implemented
		p*) lsprj ;;		# not implemented
		*) sort -f < "$TODODIR/todo.txt"
	esac
}

lscon() {
	echo "Listing contexts with \$2 is not yet implemented."
}

lsprj() {
	echo "Listing projects with \$2 is not yet implemented."
}

prio() {
	echo "Setting/Changing priorities with \$2 and \$3 is not yet implemented."
}

report() {
	echo "Creating reports is not yet implemented."
}

tree() {
	case $2 in
		c*) treecon ;;		# not implemented
		p*) treeprj		# not implemented
	esac
}

treecon() {
	echo "Listing entries as a tree contexts > projects is not yet implemented."
}

treeprj() {
	echo "Listing entries as a tree projects < contexts is not yet implemented."
}

usage() { echo "\\033[31mThat option does not seem to exist.
Take a look again at the usage instructions below or read the manpage of todo(1).\\033[0m

todo 0.2.3 - simple todo list manager.

=> [a]dd [entry]	- Create a new entry.
=> d[one] [entry]	- Mark [entry] as done.
=> e[dit] [entry]	- Edit [entry].
=> f[inished]		- Show finished items.
=> ls | list		- List current todo list.
=> ls | list c[ontexts]	- List all contexts currently in use.
=> ls | list p[rojects]	- List all projects currently active.
=> p [entry] [priority]	- Set/Change priority of [entry] to [priority] (A-Z).
=> r[eport]		- Create a report of the day containing the number of active and finished tasks.
=> t[ree] c[ontexts]	- Show a tree of contexts > projects
=> t[tee] p[rojects]	- Show a tree of projects > contexts

=> h[help]		- Show this message.

Expected environment variables:
=> EDITOR		- The editor you want to use, when opening todo.txt
=> PAGER		- The pager you want to use, when taking a look at accomplished tasks.
=> TODODIR		- The directory where associated files are stored.

todo expects your files to be in TODODIR/
	todo.txt	- Current todo list containing active items
	done.txt	- List of finished items
	report.txt	- List of reports
"
exit 0
}

[ "$1" ] || usage && main "$@"
