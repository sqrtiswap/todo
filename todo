#!/bin/sh

main() {
	case $1 in
		a*) add "$@" ;;
		d*) didit ;;		# provisional
		e*) edit ;;		# provisional
		f*) finished ;;
		ls) ls "$@" ;;
		lscon) lscon ;;		# not implemented
		lsprj) lsprj ;;		# not implemented
		p*) prio "$@" ;;
		r*) report ;;
		t*) tree "$@" ;;	# not implemented
		*) usage
	esac
}

add() {
	shift 1 && echo "(A) $(date +%F) $@" >> $TODODIR/todo.txt
}

finished() {
	$PAGER "$TODODIR/done.txt"
}

didit() {
	$EDITOR $TODODIR/todo.txt $TODODIR/done.txt
}

edit() {
	$EDITOR "$TODODIR/todo.txt"
}

ls() {
	#awk -v pat="$2" '$0 ~ pat {printf "%4s %s\n", NR, $0}' "$TODODIR/todo.txt" | sort -k2 | awk '{ce="\033[0m"}/\(A\)/{cs="\033[1;31m"}/\(B\)/{cs="\033[1;32m"}/\(C\)/{cs="\033[1;33m"}/\(D\)/{cs="\033[1;34m"}/\(E\)/{cs="\033[0m"}{print cs$0ce}'
	awk -v pat="$2" 'index($0, pat){printf "%4s %s\n", NR, $0}' "$TODODIR/todo.txt" | sort -k2 | awk '{ce="\033[0m"}/\(A\)/{cs="\033[1;31m"}/\(B\)/{cs="\033[1;32m"}/\(C\)/{cs="\033[1;33m"}/\(D\)/{cs="\033[1;34m"}/\(E\)/{cs="\033[0m"}{print cs$0ce}'
}

lscon() {
	echo "Listing contexts with \$2 is not yet implemented."
}

lsprj() {
	echo "Listing projects with \$2 is not yet implemented."
}

prio() {
	sed -i "$2"'s/(.)/('"$3"')/' "$TODODIR/todo.txt" && awk -v pat="$2" '{ce="\033[0m"}/\(A\)/{cs="\033[1;31m"}/\(B\)/{cs="\033[1;32m"}/\(C\)/{cs="\033[1;33m"}/\(D\)/{cs="\033[1;34m"}/\(E\)/{cs="\033[0m"}{if(NR==pat)print cs $0 ce}' "$TODODIR/todo.txt"
}

report() {
	echo "$(date +%FT%TZ) $(awk 'END{print NR}' $TODODIR/todo.txt) $(awk 'END{print NR}' $TODODIR/done.txt)" >> "$TODODIR/report.txt"
}

tree() {
	case $2 in
		c*) treecon ;;		# not implemented
		p*) treeprj		# not implemented
	esac
}

treecon() {
	echo "Listing entries as a tree contexts > projects is not yet implemented."
}

treeprj() {
	echo "Listing entries as a tree projects < contexts is not yet implemented."
}

usage() { echo "\\033[31mThat option does not seem to exist.
Take a look again at the usage instructions below or read the manpage of todo(1).\\033[0m

todo 0.2.3 - simple todo list manager.

=> [a]dd [entry]	- Create a new entry.
=> d[one] [entry]	- Mark [entry] as done.
=> e[dit] [entry]	- Edit [entry].
=> f[inished]		- Show finished items.
=> ls | list		- List current todo list.
=> ls | list c[ontexts]	- List all contexts currently in use.
=> ls | list p[rojects]	- List all projects currently active.
=> p [entry] [priority]	- Set/Change priority of [entry] to [priority] (A-Z).
=> r[eport]		- Create a report of the day containing the number of active and finished tasks.
=> t[ree] c[ontexts]	- Show a tree of contexts > projects
=> t[tee] p[rojects]	- Show a tree of projects > contexts

=> h[help]		- Show this message.

Expected environment variables:
=> EDITOR		- The editor you want to use, when opening todo.txt
=> PAGER		- The pager you want to use, when taking a look at accomplished tasks.
=> TODODIR		- The directory where associated files are stored.

todo expects your files to be in TODODIR/
	todo.txt	- Current todo list containing active items
	done.txt	- List of finished items
	report.txt	- List of reports"
}

[ "$1" ] || usage && main "$@"
